---
# tasks file for zsh

- name: Install zsh (Ubuntu/Debian)
  apt:
    name: zsh
    state: latest
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Install zsh (Arch)
  yay:
    name: zsh
    state: latest
  when: ansible_distribution == 'Archlinux'

- name: Check for .oh-my-zsh for user
  stat:
    path: "/home/{{ target_user }}/.oh-my-zsh"
  register: ohmyzsh_user_folder

- name: Check for .oh-my-zsh for root
  stat:
    path: "/root/.oh-my-zsh"
  become: true
  register: ohmyzsh_root_folder

- name: Download oh-my-zsh install script
  get_url:
    url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: /tmp/ohmyzsh_install.sh
    mode: 0555
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
  when: not ohmyzsh_user_folder.stat.exists or not ohmyzsh_root_folder.stat.exists

- name: Install oh-my-zsh for user
  shell: yes | bash /tmp/ohmyzsh_install.sh
  become_user: "{{ target_user }}"
  when: not ohmyzsh_user_folder.stat.exists

- name: Install oh-my-zsh for root
  shell: yes | bash /tmp/ohmyzsh_install.sh
  become: true
  when: not ohmyzsh_root_folder.stat.exists

- name: Check for zsh config directory for user
  stat:
    path: "/home/{{ target_user }}/.zsh"
  register: zsh_config_folder_user

- name: Check for zsh config directory for root
  stat:
    path: "/root/.zsh"
  become: true
  register: zsh_config_folder_root

- name: Create zsh config directory for user
  file:
    path: "/home/{{ target_user }}/.zsh"
    state: directory 
    recurse: true
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: 0755
  when: not zsh_config_folder_user.stat.exists

- name: Create zsh config directory for root
  file:
    path: "/root/.zsh"
    state: directory 
    recurse: true
    mode: 0700
  become: true
  when: not zsh_config_folder_root.stat.exists

- name: Create symlink config files for user
  file: 
    src: "{{ role_path }}/files/{{ item }}"
    dest: "/home/{{ target_user }}/.zsh/{{ item }}"
    state: link
  with_items:
    - alias.conf

- name: Create symlink config files for root
  file: 
    src: "{{ role_path }}/files/{{ item }}"
    dest: "/root/.zsh/{{ item }}"
    state: link
  become: true
  with_items:
    - alias.conf

- name: Check for config created by oh-my-zsh install for user
  stat:
    path: "/home/{{ target_user }}/.zshrc"
  changed_when: false
  register: zsh_config_folder_user

- name: Delete config created by oh-my-zsh install for user
  file:
    path: "/home/{{ target_user }}/.zshrc"
    state: absent
  when: zsh_config_folder_user.stat.exists and zsh_config_folder_user.stat.islnk is defined and zsh_config_folder_user.stat.islnk == False

- name: Check for config created by oh-my-zsh install for root
  stat:
    path: "/root/.zshrc"
  changed_when: false
  become: true
  register: zsh_config_folder_root

- name: Delete config created by oh-my-zsh install for root
  file:
    path: "/root/.zshrc"
    state: absent
  when: zsh_config_folder_root.stat.exists and zsh_config_folder_root.stat.islnk is defined and zsh_config_folder_root.stat.islnk == False
  become: true

- name: Create symlink to zshrc config for user
  file:
    src: "{{ role_path }}/files/zshrc"
    dest: "/home/{{ target_user }}/.zshrc"
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    state: link

- name: Create symlink to zshrc config for root
  file:
    src: "{{ role_path }}/files/zshrc"
    dest: "/root/.zshrc"
    state: link
  become: true

- name: Change user shell to zsh for user
  user:
    name: "{{ target_user }}"
    shell: /usr/bin/zsh

- name: Change user shell to zsh for root
  user:
    name: "root"
    shell: /usr/bin/zsh
  become: true

