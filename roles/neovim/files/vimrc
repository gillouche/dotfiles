" Don't be compatible with vi.
filetype off

let vundle_autoinstall = 0
let vundle_readme = expand('~/.config/nvim/bundle/vundle/README.md')
if !filereadable(vundle_readme)
    echo "Installing Vundle..."
    echo ""
    silent !mkdir -p ~/.config/nvim/bundle
    silent !git clone https://github.com/gmarik/vundle ~/.config/nvim/bundle/vundle
    let vundle_autoinstall = 1
endif

set rtp+=~/.config/nvim/bundle/vundle/
call vundle#begin('~/.config/nvim/bundle/')

" Vundle manages Vundle. Vundleception!
Plugin 'gmarik/vundle'

" Nerdtree
" <c-t> to open
Plugin 'scrooloose/nerdtree'

" statusline
Plugin 'itchyny/lightline.vim'

" A whole collection of language support files.
Plugin 'sheerun/vim-polyglot'

" Git wrapper
" :Gedit
" :Gstatus and "-" to add/reset
" :Gcommit => git commit
" :Gblame => git blame
" :Gdelete => git rm
" :Ggrep => git grep
" :Gread => git checkout -- filename
Plugin 'tpope/vim-fugitive'

" auto add end brackets, quotes, ...
Plugin 'tpope/vim-surround'

" sekect closest text object among a group of candidates
" press enter in normal mode
Plugin 'gcmt/wildfire.vim'

" syntax checking 
Plugin 'vim-syntastic/syntastic'

" fuzzy file
" :CtrlP to open 
" <F5> to purge cache
" <c-f> and <c-b> to cycle between modes
" <c-d> to switch to filename only search instead of full path
" <c-r> to switch to regexp mode
" <c-j>, <c-k> or the arrow keys to navigate the result list
" <c-t> or <c-v>, <c-x> to open the selected entry in a new tab or in a new split
" <c-n>, <c-p> to select the next/previous string in the prompt's history
" <c-y> to create a new file and its parent directories
" <c-z> to mark/unmark multiple files and <c-o> to open them
" :help ctrlp-mappings
Plugin 'ctrlpvim/ctrlp.vim'

" move tmux pane/vim split
" <ctrl-h> => Left
" <ctrl-j> => Down
" <ctrl-k> => Up
" <ctrl-l> => Right
" <ctrl-\> => Previous split
Plugin 'christoomey/vim-tmux-navigator'

" browse tag of the current file and get an overview of its structure
" :help tagbar
Plugin 'majutsushi/tagbar'

" multi line refactoring
" start: <C-n> start multicursor and add a virtual cursor + selection on the match
"   next: <C-n> add a new virtual cursor + selection on the next match
"   skip: <C-x> skip the next match
"   prev: <C-p> remove current virtual cursor + selection and go back on previous match
" select all: <A-n> start muticursor and directly select all matches
" <ESC> to exit back to regular vim
Plugin 'terryma/vim-multiple-cursors'

" use tab for all insert completion needs
" :help supertab
Plugin 'ervandew/supertab'

" auto add pair brackets, parenthesis, ...
Plugin 'jiangmiao/auto-pairs'

" display whitespace
Plugin 'ntpeters/vim-better-whitespace'

call vundle#end()

if vundle_autoinstall
    echo "Installing bundles..."
    echo ""
    :BundleInstall
endif

if &termencoding == ""
    let &termencoding = &encoding
endif
set encoding=utf-8

" #############################################################################
" #                 Bootstrap my configuration and plugins                    #
" #############################################################################
" Now enable syntax highlighting and filetype stuff.
syntax on

" Enable filetype handling.
filetype plugin indent on

" Now process all of the configuration files that I have stored in my 'config'
" directory, which significantly cleans up this file.
for filename in sort(split(glob('~/.config/nvim/config/*.vim'), '\n'))
    execute 'source '.filename
endfor

" vim: set et ts=4 sw=4 :
